{"hash":"0267cd9b0d6bfbe1da75d8dbeef9761719ba9205","data":{"thisPage":{"id":"5c605f462cb5af809e8c01591411c8a8","name":"OperationTwo","mockData":"{\"Kubernetes 오브젝트 모델\":\"intuitive\"}","source":"<template>\n    <div>\n        <div style = \"height:30px; width:100%; margin-top:20px;\">\n                <VueSubLayoutCard lab=\"ops-kubernetes-professional\"></VueSubLayoutCard>\n        </div>\n        <mark-down class=\"content\">\n## Kubernetes 오브젝트 모델\n- Kubernetes Core Concept : \"Desired State\"\n    - Kubernetes는 Current State을 모니터링하면서, Desired State를 유지하려는 습성을 가지고 있습니다.\n    - 직접적인 동작을 명령하지 않고, 원하는 상태를 선언(Not Imperative, But Declarative)\n        - Imperative – \"nginx 컨테이너를 3개 실행해주세요, 그리고 80포트로 오픈해주세요\"\n        - Declarative – \"80포트를 오픈한 채로, nginx 컨테이너를 3개 유지해주세요\"\n- Kubernetes Object, Controller and Kubectl\n    - Object : K8s의 상태를 나타내는 엔티티로 K8s API의 Endpoint\n        - 유형 - Pod, Service, Volume, Namespace 등이 있습니다.\n        - Spec과 Status 필드를 가짐 - Spec(Desired State), Status(Current State)\n\n    - Controller : Object의 Status를 갱신하고, Object를 Spec에 정의된 상태로 지속적으로 변화시켜 주는 주체입니다.\n        - 유형 – ReplicaSet, Deployment, StatefulSets, DaemonSet, Cronjob 등\n\n    - Kubectl : Command CLI에서 Object와 Controller를 제어하는 K8s Client\n        - 발음하기 – \"큐브시티엘\", \"쿠베시티엘\"\n\n### Pod ; Kubernetes 최소 배포 단위\n  - Pod : 미국식 [pɑːd], 영국식 [pɒd]\n      - “물고기, 고래” 작은 떼 (Docker의 심볼이 고래 모양에서 유래)\n      - 발음하기 : “팟”, “파드“, “포드”\n        </mark-down>\n       \n        <g-image style=\"max-width: 80%\"\n            src=\"~/img/03_Bizdevops/06_운영/02/image1.png\"\n        ></g-image>\n<mark-down class=\"content\">\n### Kubernetes Object Model\n  - apiVersion : 해당 Object description 을 해석할 수 있는 API server 의 버전\n  - kind : 오브젝트의 타입 – 예제는 Deployment \n  - metadata : 객체의 기본 정보. 예) 이름 \n  - spec (spec and spec.template.spec) : 원하는 ”Desired State” 의 세부 내역입니다. \n    예제에서는 3개의 replica를 template 내의 pod 정의대로 찍어내어 유지하라는 desired state 설정입니다.\n  - spec.template.spec : defines the desired state of the Pod. The example Pod would be created using nginx:1.7.9.\n  - Once the object is created, the Kubernetes system attaches the status field to the object\n      </mark-down>\n        <g-image style=\"max-width: 30%\"  \n            src=\"~/img/03_Bizdevops/06_운영/02/image2.png\"\n        ></g-image>\n        <mark-down class=\"content\">\n#### Declaration based configuration\n        </mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image3.png\"\n        ></g-image>\n        <mark-down class=\"content\">\n### Labels\n  - Labels 은 객체 식별 정보로서 Kubernetes 객체라면 모두 붙일 수 있습니다.\n  - Label들은 요구사항에 맞춰 개체의 하위 집합을 구성하고 선택하는데 사용됩니다.\n  - Label들은 객체에 고유성을 제공하지 않아, 여러 객체들은 같은 label을 가질 수 있습니다.\n#### Label Selectors\n  - Label Selectors들은 객체들의 집합을 선택하며, kubernetes는 2가지 종류를 지원합니다.\n      - Equality-Based Selectors \n          Uses the =, ==, != 연산자를 이용하여 Label key와 value 값을 기반으로 객체들을 필터링 할 수 있습니다. \n      - Set-Based Selectors\n          in, notin, exist 연산자를 사용하며, value 값들을 기반으로 객체들을 선택할 수 있습니다. \n#### Annotations\n  - Label 처럼 식별 정보는 아닌 임의의 비 식별 메타데이터를 객체에 key-value 형태로 추가합니다.\n      ```\n      \"annotations\": {\n        \"key1\" : \"value1\",\n        \"key2\" : \"value2\"\n      }\n      ```\n\n  - 주로, 히스토리, 스케줄 정책, 부가 정보 등을 기술\n  - 배포 주석을 추가해 서비스를 Deploy하고, 이전 서비스로 롤백 시, 해당 정보를 활용해 롤백해줍니다.\n      ```\n      apiVersion: apps/v1\n      kind: Deployment\n      metadata:\n        name: nginx-deployment\n        labels:\n          app: nginx\n        annotataions:\n          kubernetes.io/change-cause=nginx:1.7.9\n      spec:\n        replicas: 3\n        selector:\n          ………………………..\n      ```\n\n#### One-dash, Double-dash\n  - Generally, in Command Options\n      - Some have a long form without a short form ( -- author, --block-size)\n      - Some have a short form without a long form (-c, -f, -g)\n      - Some have both a long form and a short form (-A / --almost-all, -b / --escape)\n  - In Pod Selector,  short form ( -l ) equals long form( --selector )\n\n#### Replication Controllers\n  - Master node의 Controller Manager 중 하나입니다.\n  - Pod의 복제품이 주어진 개수(Desired State)만큼 작동하고 있는지 확인하고 개수를 조절합니다.\n  - Replication Controller는 Pod를 생성하고 관리합니다.\n      > 일반적으로 Pod는 자기 복구가 불가능 하기에 단독으로 배포를 하지 않습니다.\n\n### ReplicaSets\n  - ReplicaSet(rs)은 Replication Controller의 업그레이드 버전입니다.\n  - ReplicaSet은 equal 및 set 기반 Selector를 모두 지원하는 반면,\n    Replication Controller는 equal기반 Selector만 지원합니다.\n</mark-down>\n        <g-image style=\"max-width: 50%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image4.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n  - 지정된 수의 Pod (Desired State)가 항상 실행되도록 보장합니다.\n  - ReplicaSets은 단독으로도 사용 가능하지만, 주로 Pod Orchestration에 사용(Pod creation, deletion, updates) \n  - Deployment가 ReplicaSets을 자동 생성하기 때문에 사용자는 관리에 신경 쓰지 않아도 됩니다.\n    </mark-down>\n        <g-image style=\"max-width: 50%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image5.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n### Deployments\n  - Deployment 객체는 Pods와 ReplicaSets에 대한 선언적 업데이트를 제공합니다.\n  - Deployment Controller는 Master node 컨트롤 관리자의 일부로 Desired state가 항상 만족이 되는지 확인합니다.\n  - Deployment 가 ReplicaSet을 만들고 ReplicaSet은 그 뒤에 주어진 조건만큼의 Pod들을 생성합니다.\n</mark-down>\n        <g-image style=\"max-width: 50%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image6.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n- Deployment의 Pod template이 바뀌게 되면, 새로운 ReplicaSet이 생성되는데, 이를 Deployment rollout이라고 합니다.\n- Rollout은 Pod template에 변동이 생겼을 경우에만 동작하며, Scaling등의 작업은 ReplicaSet을 새로 생성하지 않습니다.\n    </mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image7.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n- 새로운 ReplicaSet이 준비되면 Deployment는 새로운 ReplicaSet을 바라봅니다.\n- Deployment들은 Deployment recording등의 rollback 기능을 제공하며, 문제가 발생했을 경우, 이전 단계로 돌릴 수 있습니다.\n</mark-down>\n        <g-image style=\"max-width: 50%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image8.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n#### Deployment 생성\n  - 설정 파일을 생성\n      - nano nginx-deployment.yaml\n  - 파일을 기반을 배포\n      - kubectl create -f nginx-deployment.yaml\n  - 생성된 deployment 확인\n      - kubectl describe deployment nginx-deployment\n\n#### Scaling Deployments\n  - Deployment의 replica의 개수를 확인\n      - kubectl get pods\n  - Deployment의 이름을 복사\n      - kubectl get deployments\n  - 해당 Deployment의 scale 조정\n      - kubectl scale deployments [deployment 이름] --replicas=3\n  - 변경을 확인 \n      - kubectl get pods\n\n#### Deployments 의 변경\n  - Deployment 파일을 변경\n      - kubectl get deployments \n      - nano nginx-deployment.yaml\n          - ( spec 아래 항목에 replicas: 5 속성 추가; 있으면 수정)\n  - 변경한 파일을 적용\n      - kubectl apply -f nginx-deployment.yaml\n  - 변경 내용을 확인\n      - kubectl get pods\n  - 설정파일에 추가된 replicas 속성을 삭제 후 다시 적용\n      - Nano nginx-deployment.yaml (replicas) \n      - kubectl apply -f nginx-deployment.yaml\n      - kubectl delete pods --all\n      - kubectl get pods\n\n#### Rolling update\n  - 작동중인 pod와 deployments 확인\n      - kubectl get pods \n      - kubectl get deployments\n\n  - 새로운 버전의 deployments 배포 및 배포 상태 확인\n      - kubectl apply -f nginx-deployment.yaml\n      - kubectl set image deployment/nginx-deployment nginx=nginx:1.9.1\n      - kubectl rollout status deployment/nginx-deployment\n\n  - 변경 확인\n      - kubectl get deployments \n      - kubectl get pods \n      - kubectl describe pods [pod 이름]\n\n  - Pod에 접속하여 확인\n      - kubectl exec -it podname -- /bin/bash \n      - apt-get update \n      - apt-get install curl \n      - curl localhost\n#### Rollback\n  - 현재 실행중인 객체들을 확인\n      - kubectl get pods\n      - kubectl get deployments -o wide     \t\n          > deployment에 적용된 Image:버전 추가 표시\n\n  - 객체를 롤백 처리\n      - kubectl rollout undo deployment/nginx-deployment\n\n  - 진행을 확인\n      - kubectl get deployments -o wide\n\n#### Namespaces\n  - Kubernetes는 동일 물리 클러스터를 기반으로 하는 복수의 가상 클러스터를 지원하는데 이들 가상 클러스터를  Namespace라고 합니다.\n  - Namespace를 활용하면, 팀이나 프로젝트 단위로 클러스터 파티션을 나눌 수 있습니다.\n  - Namespace 내에 생성된 자원/객체는 고유하나, Namespace사이에는 중복이 발생할 수 있습니다.\n  - Namespaces Object 조회\n      - Kubernetes는 처음에 3개의 초기 네임스페이스를 가집니다.\n      ```\n      $ kubectl get namespaces\n      NAME            STATUS       AGE\n      default         Active       11h\n      kube-public     Active       11h\n      kube-system     Active       11h\n      ```\n      - default  : 다른 namespace를 갖는 다른 객체들을 가지고 있습니다.\n      - kube-public 은 클러스터 bootstrapping 같은 모든 유저가 사용가능한 특별한 namespace 입니다.\n      - kube-system: Kubernetes system에 의해서 생성된 객체를 가지고 있습니다.\n      - Resource Quotas를 사용하여 namespace 내에 존재하는 자원들을 나눌 수 있습니다.\n\n#### Pod Access Issues\n  - 어플리케이션에 접근하기 위해서는, 사용자가 Pod에 접근해야 합니다.\n  - Pod들은 언제든지 소멸 가능하기에 IP주소는 고정되어 있지 않습니다.\n  - 사용자가 직접 IP주소로 Pod에 연결되어 있을 때, Pod가 죽어서 새로 만들어지면 접속할 방법이 없습니다.\n  - 이 상황을 극복하기 위해서 추상화를 통해 Service라는 Pod들의 논리적 집단을 만들어 규칙을 설정하고 사용자들은 여기에 접속을 합니다.\n</mark-down>\n        <g-image style=\"max-width: 90%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image9.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n\n\n### Services\n  - Selector를 사용하여 Pod를 논리적 그룹으로 나눌 수 있습니다.\n  - 각 논리적 그룹에 대해서 Service name이라는 이름을 부여할 수 있습니다.\n  - 사용자는 Service IP주소를 통해 Pod에  접속하게 됩니다.\n  - 각 Service에 부여된 IP는 클러스터 IP 라고도 부릅니다.\n  - Service는 각 Pod에 대해 Load balancing을 자동으로 수행\n</mark-down>\n        <g-image style=\"max-width: 70%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image10.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n\n#### kube-proxy\n  - 모든 Worker node들은 kube-proxy라는 데몬을 실행하며,\n    이 데몬은 Service 및 End-point 생성 /삭제를 위해 마스터 노드의 API 서버를 모니터링합니다.\n  - 각 node에 있는 모든 새로운 Service에 대해서 kube-proxy는 Iptable 규칙을 구성하여,\n    ClusterIP의 트래픽을 캡처하고 이를 End-point로 보냅니다.\n  - Service가 제거되면, kube-proxy는 노드상의 Iptables 규칙도 지웁니다.\n    </mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image11.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n\n#### Service Discovery\n  - Service는 클라이언트가 애플리케이션에 접근하는 Kubernetes의 채널로 런타임시, 이를 검색할 수 있는 방법이 필요합니다.\n  - DNS를 이용하는 방법입니다.\n      > 서비스는 생성되면, [서비스 명].[네임스페이스명].svc.cluster.local이라는 DNS명으로 쿠버네티스 내부 DNS에 등록되고, \n        쿠버네티스 내부 클러스터에서는 이 DNS명으로 접근 가능한데,\n        이 때 DNS에서 리턴해 주는 IP는 외부 IP(External IP)가 아니라 Cluster IP(내부 IP) 입니다.\n  \n  - External IP를 명시적으로 지정하는 방법입니다.\n      > 외부 IP는 Service의 Spec 부분에서 externalIPs 항목의 Value로 기술합니다.\n\n#### ServiceType\n  - Service를 정의할 때 Access Scope를 따로 정할 수 있습니다.\n      - 클러스터 내에서만 접근이 가능합니까?\n      - 클러스터 내와 외부에서 접근이 가능합니까?\n      - 클러스터 밖의 리소스에 대한 Map을 가지고 있습니까?\n\n  - Service 생성 시, IP주소 할당 방식과 서비스 연계 등에 따라 4가지로 구분합니다.\n      - ClusterIP\n      - NodePort\n      - LoadBalancer\n      - ExternalName\n\n#### ServiceType : ClusterIP\n  - 디폴트 설정으로 서비스에 클러스터 ip를 할당 \n  - 쿠버네티스 클러스터 내에서만 이 서비스에 접근 가능\n  - 외부에서는 외부 IP를 할당 받지 못했기 때문에 접근이 불가능  \n  \n#### ServiceType : NodePort\n  - 고정 포트(NodePort)로 각 노드의 IP에 서비스를 노출\n  - Cluster IP 뿐만 아니라, 노드의 IP와 포트를 통해서도 &#40;&#60; NodeIP &#62;:&#60; NodePort &#62;&#41; 접근 가능\n  </mark-down>\n        <g-image style=\"max-width: 70%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image12.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: hello-node-svc\nspec:\n  selector:\n    app: hello-node\n  type: NodePort\n  ports:\n    - name: http\n      port: 80\n      protocol: TCP\n      targetPort: 8080\n      nodePort: 30036\n```\n</mark-down>\n        <g-image style=\"max-width: 50%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image13.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n#### ServiceType : LoadBalancer\n  - 클라우드 밴더의 로드밸런싱 기능을 사용\n      - NodePort와 ClusterIP Service들은 자동으로 생성되어 External Load Balancer가 해당 포트로 라우팅\n      - Service들은 각 Worker node에서 Static port로 노출\n  - LoadBalancer ServiceType은 기본 인프라가 Load balancer의 자동 생성을 제공하고, Kubernetes를 지원 할 경우에만 작동\n      > Ex) Azure, Google Cloud Platform, AWS \n</mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image14.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n#### ServiceType: ExternalName\n  - 외부 서비스를 쿠버네티스 내부에서 호출할 때 사용\n  - 쿠버네티스 클러스터내의 Pod들은 클러스터 IP를 가지고 있기 때문에 클러스터 IP 대역 밖의 서비스를 호출하고자 하면,\n    NAT 설정등 복잡한 설정이 필요합니다.\n  - Azure, AWS 나 GCP와 같은 클라우드 환경에서 DBMS나, 또는 클라우드에서 제공되는 매지니드 서비스 (RDS, CloudSQL)등을 사용하고자 할 경우\n      - 쿠버네티스 클러스터 외부이기에 호출이 어려운 경우가 있는데, 이를 쉽게 해결할 수 있는 방법이 ExternalName 타입입니다.\n\n    ```\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: my-service\n      namespace: prod\n    spec:\n      type: ExternalName\n      externalName: my.database.example.com\n    ```\n    - 서비스를 ExternalName 타입으로 설정하고, 주소를 my.database.example.com으로\n      설정해주면 이 my-service는 들어오는 모든 요청을 my.database.example.com 으로 포워딩 \n    - 일종의 프록시와 같은 역할\n    </mark-down>\n        <g-image style=\"max-width: 25%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image15.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n### Volumes\n  - 쿠버네티스는 여러 호스트에 걸처 Stateless한 컨테이너를 마이크로서비스로 \n    배포하는 것이 목표이기에 영속성 있는 저장장치(Persistent Volume)를 고려해야 합니다.\n  - Volume은 Pod에 장착되어, 그 Pod에 있는 Container 간에 공유\n</mark-down>\n        <g-image style=\"max-width: 40%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image16.png\"\n        ></g-image>\n    <mark-down class=\"content\">\n\n#### Types of Volumes\n  - Pod에 마운트된 디스크는 Volume Type에 따라 사용 유형이 정의\n  - Volume Type 內 디스크의 크기, 내용 등의 속성 설정\n  - Types of Volumes\n</mark-down>\n        <g-image style=\"max-width: 60%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image17.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### Volumes : emptyDir\n  ```\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: shared-volumes\n  spec:\n    containers:\n    - image: redis\n      name: redis\n      volumeMounts:\n      - name: shared-storage\n        mountPath: /data/shared\n    - image: nginx\n      name: nginx\n      volumeMounts:\n      - name: shared-storage\n      mountPath: /data/shared\n    volumes:\n    - name: shared-storage\n      emptyDir: {}\n  ```\n  - emptyDir의 생명주기는 컨테이너 단위가 아닌 Pod 단위로 Container 재기동에도 계속 사용 가능합니다.\n  - 생성된 Pod 확인\n  - 지정 컨테이너 접속 후, 파일 생성\n      - kubectl exec -it shared-volumes --container redis -- /bin/bash\n      - cd /data/shared\n      - echo test… > test.txt\n\n  - 다른 컨테이너로 접속 후, 파일 확인\n      - kubectl exec -it shared-volumes --container nginx -- /bin/bash\n      - cd /data/shared\n      - ls\n</mark-down>\n        <g-image style=\"max-width: 90%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image18.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### Volumes : hostPath\n  ```\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: hostpath\n  spec:\n    containers:\n    - name: redis\n      image: redis\n      volumeMounts:\n      - name: somepath\n        mountPath: /data/shared\n  volumes:\n  - name : somepath\n    hostPath:\n      path: /tmp\n      type: Directory\n  ```\n  - Node의 Local 디스크 경로를 Pod에 마운트\n  - 같은 hostPath에 있는 볼륨은 여러 Pod사이에서 공유\n  - Pod가 삭제되어도 hostPath에 있는 파일은 유지\n  - Pod가 재기동 되어 다른 Node에서 기동될 경우, 새로운 Node의 hostPath를 사용\n  - Node의 로그 파일을 읽는 로그 에이전트 컨테이너 등에 사용가능\n  - Pod 생성 및 확인 (Pod 내, ls -al /data/shared) \n    </mark-down>\n        <g-image style=\"max-width: 90%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image19.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### Volumes example : gitRepo\n  ```\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: gitrepo-volume-pod\n  spec:\n    containers:\n    - image: nginx:alpine\n      name: web-server\n      volumeMounts:\n      - name: html\n        mountPath: /usr/share/nginx/html\n        readOnly: true\n      ports:\n      - containerPort: 80\n        protocol: TCP\n  volumes:\n  - name: html\n    gitRepo:\n      repository: \n  https://github.com/luksa/kubia-website-example.git\n      revision: master\n      directory: .\n  ```\n  - Pod 생성시 지정된 Git 리파지토리의 특정 리비전을 Cloning하여 디스크 볼륨 생성\n  - 물리적으로는 emptyDir이 생성되고 Git Clone 수행\n  - HTML 같은 정적 파일 및 Nodejs 같은 스크립트 기반 코드 배포에 유용\n</mark-down>\n        <g-image style=\"max-width: 70%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image20.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### PersistentVolume & PersistentVolumeClaim\n  - 특정 IT 환경에서는 영속성 있는 대용량 스토리지는 관리자에 의해 관리\n      - 쿠버네티스 클러스터를 사용하는 개발자로부터 볼륨 프로비저닝 역할을 분리하는 사상\n  - 시스템 관리자가 실제 물리 디스크를 생성한 뒤, 이 디스크를 PersistentVolume 이라는 이름으로 Kubernetes에 등록\n  - 개발자는 Pod 생성 시, 볼륨을 정의하고, 해당 볼륨의 정의 부분에 PVC(PersistentVolumeClaim)를 지정하여 관리자가 생성한 PV와 연결\n</mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image21.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### StorageClass - Dynamic PV Provisioning\n  - PV는 관리자에 의해 수동으로 생성될 수 있지만, 자동 생성도 가능(Dynamic Provisioning)\n  - StorageClass(SC) Object\n  - StorageClass 객체에 의해 PersistentVolumes 동적 제공 가능\n      - StorageClass는 PersistentVolume를 만들기 위해 Cloud Provider별 CSI 인터페이스를 구현하여 제공\n  - PersistentVolumes 스토리지 관리를 제공하는 Volume Types :\n      - GCEPersistentDisk, AWSElasticBlockStore, AzureDisk, NFS, iSCSI\n</mark-down>\n        <g-image style=\"max-width: 90%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image22.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### Azure StorageClass Object\n  - Azurefile : 파일 스토리지, 여러 노드 및 Pod간 데이터 공유 가능 \n  - Azurefile-premium : SSD 기반 고성능의 Low-Latency 디스크 지원\n  - default : 블록 스토리지, 표준 SSD Azure 디스크를 프로비저닝, 단일 Pod 에서만 사용 가능\n  - Managed-premium : Storage Class는 프리미엄 Azure Disk를 프로비저닝\n      - SSD 기반 고성능의 Low-Latency 디스크 지원\n      - 프로덕션 워크로드를 실행하는 VM에 완벽한 디스크\n</mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image23.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### PersistentVolumeClaims\n  - Pod가 크기, 접근 모드에 따라 PVC를 요청, 적합한 PersistentVolume 발견시 PersistentVolume Claim에 바인딩\n  - PVC 조건을 만족하는 PV가 없을 경우, PV를 StorageClass가 자동으로 Provisioning하여 바인딩\n    </mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image24.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n### ConfigMaps\n  - ConfigMaps는 컨테이너 이미지로부터 설정 정보를 분리할 수 있게 해줍니다.\n  - 환경변수나 설정값 들을 환경변수로 관리해 Pod가 생성될 때 이 값을 주입\n  - ConfigMaps은 2가지 방법으로 생성\n      - 리터럴 값\n      - 파일\n  - ConfigMaps는 etcd에 저장 \n    </mark-down>\n        <g-image style=\"max-width: 70%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image25.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### 리터럴 값으로부터 ConfigMap 생성\n  - ConfigMap을 생성하는 명령어\n  ```\n  $ kubectl create configmap my-config --from-literal=key1=value1 \n  --from-literal=key2=value2\n    configmap \"my-config\" created \n  ```\n  - 설정된 ConfigMap 정보 가져오기\n  ```\n  $ kubectl get configmaps my-config -o yaml\n    apiVersion: v1\n    data:\n      key1: value1\n      key2: value2\n    kind: ConfigMap\n    metadata:\n      creationTimestamp: 2017-05-31T07:21:55Z\n      name: my-config\n      namespace: default\n      resourceVersion: \"241345\"\n      selfLink: /api/v1/namespaces/default/configmaps/my-config\n      uid: d35f0a3d-45d1-11e7-9e62-080027a46057\n  ```\n  - o yaml 옵션은 해당 정보를 yaml형태로 출력하도록 요청합니다.\n  - 해당 객체는 종류가 ConfigMap이며 key-value 값을 가지고 있습니다.\n  - ConfigMap의 이름 등의 정보는 metadata field에 들어 있습니다.\n#### 파일로부터 ConfigMap 생성 (1/2)\n  - 아래와 같은 설정 파일을 만듭니다.\n  ```\n  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n    name: customer1\n  data:\n    TEXT1: Customer1_Company\n    TEXT2: Welcomes You\n    COMPANY: Customer1 Company Technology Pct. Ltd.\n  ```\n  - customer1-configmap.yaml라는 이름으로 파일을 생성하였을 경우, 아래와 같이 ConfigMap를 생성합니다.\n  ```\n  $ kubectl create -f customer1-configmap.yaml\n    configmap \"customer1\" created\n  ```\n#### 파일로부터 ConfigMap 생성 (2/2)\n  - Userinfo.properties 파일을 생성하고, \n  ```\n  myname=apexacme\n  email=apexacme@uengine.org\n  Address=seoul\n  ```\n  - 파일을 이용해 ConfigMap을 만들 때는 --from-file을 이용해 파일명을 넘깁니다.\n  - kubectl create configmap cm-file --from-file=./properties/profile.properties\n      - 이때, 키는 파일명이 되고, 값은 파일 내용이 됩니다.\n        </mark-down>\n        <g-image style=\"max-width: 60%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image26.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### Containerizing with ConfigMap from Dockerizing\n  - Scenario\n      - ConfigMap 생성\n      - ConfigMap의 환경변수를 읽어 출력하는 NodeJS 어플리케이션 준비\n      - Dockerfile 생성\n      - Dockerizing & Azure Container Registry에 Push\n      - Deployment yaml, Service yaml 준비\n      - 배포 및 서비스 생성\n      - 브라우저를 통해 서비스 확인\n      - ConfigMap의 환경변수를 어플리케이션이 정상적으로 참조하여 출력하는지 여부\n      - ConfigMap 생성\n      ```\n      $ kubectl create configmap hello-cm --from-literal=language=java\n      $ kubectl get cm\n      $ kubectl get cm hello-cm -o yaml\n      ```\n      - ConfigMap의 환경변수를 읽어 출력하는 NodeJS 어플리케이션\n      ```\n      var os = require('os');\n      var http = require('http');\n      var handleRequest = function(request, response) {\n        response.writeHead(200);\n        response.end(\" my prefered language is \"+process.env.LANGUAGE+ \"\\n\");\n\n        //log\n        console.log(\"[\"+\n                    Date(Date.now()).toLocaleString()+\n                    \"] \"+os.hostname());\n      }\n      var www = http.createServer(handleRequest);\n      www.listen(8080);\n      ```\n      - Dockerfile 생성\n      ```\n      FROM node:carbon\n      EXPOSE 8080\n      COPY server.js .\n      CMD node server.js > log.out\n      ```\n      - Dockerizing & Azure Container Registry에 Push\n      ```\n      $ docker build -t (uengineorg).azurecr.io/cm-sandbox:v1 .\n      $ docker push (uengineorg).azurecr.io/cm-sandbox:v1\n      # 위 2 명령행을 아래 하나의 명령으로 수행 가능\n      $ az acr build --registry [acr-레지트스리명] --image [acr레지스트리명].azurecr.io/cm-sandbox:v1 .\n      ```\n      \n      - 인증 오류 발생시, 로그인 수행 : az acr login --name user35registry --expose-token\n      - Push 확인 : Azure Portal > 컨테이너 레지스터리 > 리파지토리\n      ```\n      apiVersion: apps/v1beta2\n      kind: Deployment\n      metadata:\n        name: cm-deployment\n      spec:\n        replicas: 1\n        minReadySeconds: 5\n        selector:\n          matchLabels:\n            app: cm-literal\n        template:\n          metadata:\n            name: cm-literal-pod\n            labels:\n              app: cm-literal\n          spec:\n            containers:\n            - name: cm\n              image: uengineorg.azurecr.io/cm-sandbox:v1\n              imagePullPolicy: Always\n              ports:\n              - containerPort: 8080\n              env:\n              - name: LANGUAGE\n                valueFrom:\n                  configMapKeyRef:\n                    name: hello-cm\n                    key: language\n      ```\n\n      - Deployment(cm-deployment.yaml) 생성/ 실행\n      - kubectl create -f cm-deployment.yaml\n      - $ kubectl get deploy\n      ```\n      apiVersion: v1\n      kind: Service\n      metadata:\n        name: cm-literal-svc\n      spec:\n        selector:\n          app: cm-literal\n      ports:\n        - name: http\n        port: 80\n        protocol: TCP\n        targetPort: 8080\n      type: LoadBalancer\n      ```\n      - Service(cm-service.yaml) 생성/ 실행\n      - $ kubectl create -f cm-service.yaml\n      - $ kubectl get svc\n\n      - 브라우저를 통해 서비스 확인\n        - Service의 External-IP 접속\n        </mark-down>\n        <g-image style=\"max-width: 60%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image27.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### 마이크로서비스 결과 확인\n</mark-down>\n        <g-image style=\"max-width: 70%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image28.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n#### Pod에서 ConfigMap 추가 사용하기\n  ```\n  apiVersion: apps/v1beta2\n  kind: Deployment\n  metadata:\n    name: cm-file-deployment\n  spec:\n    replicas: 3\n    minReadySeconds: 5\n    selector:\n      matchLabels:\n        app: cm-file\n    template:\n      metadata:\n        name: cm-file-pod\n        labels:\n          app: cm-file\n      spec:\n        containers:\n        - name: cm-file\n          image: uengineorg.azurecr.io/cm-file:v1\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n          env:\n          - name: PROFILE\n            valueFrom:\n              configMapKeyRef:\n                name: cm-file\n                key: profile.properties\n  ```\n  - 환경변수로 값 전달\n      - cm-file configMap에서 키가 “profile.properties” (파일명)인 값을 읽어와서 환경 변수 PROFILE에 저장 \n      - 저장된 값은 파일의 내용인 아래 문자열이 됩니다.\n      - myname=terry\n      - email=myemail@mycompany.com\n      - address=seoul\n  ```\n  apiVersion: apps/v1beta2\n  kind: Deployment\n  metadata:\n    name: cm-file-deployment-vol\n  spec:\n    replicas: 3\n    minReadySeconds: 5\n    selector:\n      matchLabels:\n        app: cm-file-vol\n  template:\n    metadata:\n      name: cm-file-vol-pod\n      labels:\n        app: cm-file-vol\n  spec:\n    containers:\n      - name: cm-file-vol\n      image: uengineorg.azurecr.io /cm-file-volume:v1\n      imagePullPolicy: Always\n      ports:\n      - containerPort: 8080\n      volumeMounts:\n        - name: config-profile\n          mountPath: /tmp/config\n    volumes:\n      - name: config-profile\n        configMap:\n          name: cm-file\n  ```\n\n### Secrets\n  - ConfigMap이 일반적인 환경 설정 정보나 Config정보를 저장하도록 디자인 되었다면,\n    보안이 중요한 패스워드나 API 키, 인증서 파일들은 Secret에 저장합니다.\n\n  - Secret은 정보보안 차원에서 추가적인 보안 기능을 제공\n      - 예를 들어, API서버나 Node의 파일에 저장되지 않고, 항상 메모리에 저장되므로 상대적 접근이 어렵습니다.\n      - Secret의 최대 크기는 1MB (너무 커지면, apiserver나 Kubelet의 메모리에 부하 발생)\n\n  - ConfigMap과 기본적으로 유사하나, 값(value)에 해당하는 부분을 base64로 인코딩해야 합니다.\n      - SSL인증서와 같은 binary파일의 경우, 문자열 저장이 불가능하므로 인코딩이 필요합니다.\n      - 이를 환경변수로 넘길 때나 디스크볼륨으로 마운트해서 읽을 경우 디코딩 되어 적용합니다.\n  ```\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: hello-secret\n  data:\n    language: amF2YQo=\n  ```\n\n  - Kubectl 명령어로 Secret 생성 및 확인\n    - 명령어로 Secret 만들기 \n        - $ kubectl create secret generic my-password --from-literal=password=mysqlpassword\n        - my-password라는 Secret을 생성하고, password 라는 key와 mysqlpassword라는 value 값을 가지게 됩니다.\n        - Value는 base64로 자동 encoding\n        - generic : create a secret from a local file, directory or literal value\n\n    - Secret 확인 : kubectl get secret my-password -o yaml\n        - echo [base64 value] | base64 --decode\n- Secret을 직접 만들기 \n    - base64 형태로 인코딩하여 YAML파일내에 직접 생성 가능\n    ```\n    $ echo mysqlpassword | base64\n      bXlzcWxwYXNzd29yZAo=\n    ```\n\n    - 위 방식으로 인코딩 된 정보를 사용해 설정파일 생성\n    ```\n    apiVersion: v1\n    kind: Secret\n    metadata:\n      name: my-password\n    type: Opaque\n    data:\n      password: bXlzcWxwYXNzd29yZAo=\n    ```\n\n    - base64 인코딩은 바로 디코딩 됨으로 주의해야 합니다!\n    ```Terminal\n    $ echo \"bXlzcWxwYXNzd29yZAo=\" | base64 --decode\n    ```\n\n    - 설정파일을 절대 소스코드에 넣지 않도록 주의해야 합니다!\n\n  - Pod에서 Secret 사용하기\n  ```yaml\n  apiVersion: apps/v1beta2\n  kind: Deployment\n  metadata:\n    name: hello-secret-deployment\n  spec:\n    replicas: 1\n    minReadySeconds: 5\n    selector:\n      matchLabels:\n        app: hello-secret-literal\n  template:\n    metadata:\n      name: hello-secret-literal-pod\n      labels:\n        app: hello-secret-literal\n      spec:\n        containers:\n        - name: hello-secret\n          image: uengineorg.azurecr.io/hello-secret:v1\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n          env:\n          - name: LANGUAGE\n          valueFrom:\n            secretKeyRef:\n              name: hello-secret\n              key: language\n  ```    \n  \n  - Deployment.yaml 생성/ 실행\n  - kubectl create -f hello-secret-deployment.yaml\n  - $ kubectl get deploy\n#### Pod에서 Secret 파일 마운트 사용하기\n  - 사용자 id를 저장한 user.property파일과 비밀번호를 저장한 password.property 파일생성\n      - id file 내용 : $ cat user.property   $ admin\n      - password file 내용 : $ cat password.property  $ adminpassword\n  - Secret 생성\n      - kubectl create secret generic db-password --from-file=./user.property  --from-file=./password.property\n      - 생성된 secret은 user.property, password.property 파일명을 각각 key로 파일의 내용이 저장\n  - Secret을 읽어 출력할 어플리케이션 생성 : server.js\n  ```java\n  var os = require('os');\n  var fs = require('fs');\n  var http = require('http');\n  var handleRequest = function(request, response) {\n    fs.readFile('/tmp/db-password/user.property',function(err,userid){\n      response.writeHead(200);\n      response.write(\"user id  is \"+userid+\" \\n\");\n      fs.readFile('/tmp/db-password/password.property',function(err,password){\n        response.end(\" password is \"+password+ \"\\n\");\n      })\n    })\n    console.log(\"[\"+\n      Date(Date.now()).toLocaleString()+\"] \"+os.hostname());\n  }\n  var www = http.createServer(handleRequest);\n  www.listen(8080);\n  ```\n\n  - Dockerfile 생성\n  ```Terminal\n  FROM node:carbon\n  EXPOSE 8080\n  COPY server.js .\n  CMD node server.js > log.out\n  ```\n\n  - Dockerizing & Azure Container Registry에 Push\n  ```Terminal\n  $ docker build -t user35registry.azurecr.io/hello-secret-file:v1 .\n  $ docker push user35registry.azurecr.io/hello-secret-file:v1\n\n  # 위 2 명령행을 아래 하나의 명령으로 수행 가능\n  $ az acr build --registry [acr-레지트스리명] --image [acr레지스트리명].azurecr.io/ hello-secret-file:v1 .\n  ```\n\n  - 인증 오류 발생시, 로그인 수행 : az acr login --name user35registry --expose-token\n  - Push 확인 : Azure Portal > 컨테이너 레지스터리 > 리파지토리\n  ```yaml\n  apiVersion: apps/v1beta2\n  kind: Deployment\n  metadata:\n    name: hello-serect-file-deployment\n  spec:\n    replicas: 3\n    minReadySeconds: 5\n    selector:\n      matchLabels:\n        app: hello-secret-file\n    template:\n      metadata:\n        name: hello-secret-file\n        labels:\n          app: hello-secret-file\n      spec:\n        containers:\n        - name: hello-secret-file\n          image: uengineorg.azurecr.io/hello-secret-file:v1\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n          volumeMounts:\n            - name: db-password\n              mountPath: \"/tmp/db-password\"\n              readOnly: true\n        volumes:\n        - name: db-password\n          secret:\n            secretName: db-password\n            defaultMode: 0600\n  ```\n\n  - Deployment(hello-secret-file-deployment.yaml) 생성/ 실행\n  - kubectl create -f hello-secret-file-deployment.yaml\n  - $ kubectl get deploy\n\n  ```yaml\n  apiVersion: v1\n  kind: Service\n  metadata:\n    name: hello-secret-file-service\n  spec:\n    selector:\n      app: hello-secret-file\n    ports:\n      - name: http\n        port: 80\n        protocol: TCP\n        targetPort: 8080\n    type: LoadBalancer\n  ```\n\n  - Service(hello-secret-file-service.yaml) 생성\n      > $ kubectl create -f hello-secret-file-service.yaml\n\n  - $ kubectl get svc\n  - 브라우저를 통해 서비스 확인\n      - Service의 External-IP 접속\n\n### Liveness Probes & Readiness Probes\n  - 쿠버네티스는 각 컨테이너의 상태를 주기적으로 체크(Health Check)해서, \n      - 문제가 있는 컨테이너를 자동으로 재시작하거나 또는 문제가 있는 컨테이너를 서비스에서 제외 합니다.\n  - Liveness와 Readiness Probes은 kubelet이 pod내에서 실행되는 어플리케이션의 health를 조정하기 때문에 매우 중요합니다.\n  \n  - Probe Types\n      - Liveness probe와 readiness probe는 컨테이너가 정상적인지 아닌지를 체크하는 방법으로 다음과 같이 3가지 방식을 제공합니다.\n          - Command probe\n          - HTTP probe\n          - TCP probe\n  - Liveness Probes\n      - Pod는 정상적으로 작동하지만 내부의 어플리케이션이 반응이 없다면, 컨테이너는 의미가 없습니다.\n          - 위와 같은 경우는 어플리케이션의 Deadlock 또는 메모리 과부화로 인해 발생할 수 있으며,\n            발생했을 경우 컨테이너를 다시 시작해야 합니다.\n      - Liveness probe는 Pod의 상태를 체크하다가, Pod의 상태가 비정상인 경우 kubelet을 통해서 재시작합니다.\n    </mark-down>\n        <g-image style=\"max-width: 80%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image29.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n\n#### Liveness Command probe\n  ```yaml\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    labels:\n      test: liveness\n    name: liveness-exec\n  spec:\n    containers:\n    - name: liveness\n      image: k8s.gcr.io/busybox\n      args:\n      - /bin/sh\n      - -c\n      - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600\n      livenessProbe:\n        exec:\n          command:\n          - cat\n          - /tmp/healthy\n      initialDelaySeconds: 3\n      periodSeconds: 5\n  ```\n\n  - 왼쪽은 /tmp/healthy 파일이 존재하는지 확인하는 설정 파일입니다.\n  - periodSeconds 파라미터 값으로 5초마다 해당  파일이 있는지 조회합니다.\n  - initialDelaySeconds 파라미터는 kubelet이 첫 체크하기 전에 기다리는 시간을 설정합니다.\n  - 파일이 존재하지 않을 경우, 정상 작동에 문제가 있다고 판단되어 kubelet에 의해 자동으로 컨테이너가 재시작 됩니다.\n\n#### Liveness HTTP probe\n  - Kubelet이 HTTP GET 요청을 /healthz 로 보냅니다.\n  - 실패 했을 경우, kubelet이 자동으로 컨테이너를 재시작 합니다.\n  ```yaml\n  livenessProbe:\n    httpGet:\n      path: /healthz\n      port: 8080\n      httpHeaders:\n      - name: X-Custom-Header\n        value: Awesome\n    initialDelaySeconds: 3\n    periodSeconds: 3\n  ```\n\n  - Liveness TCP Probe\n      - kubelet은 TCP Liveness Probe를 통해, 지속적으로 어플리케이션이 실행중인 컨테이너의 TCP Socket을 열려고 합니다.\n      - 정상이 아닌 경우 컨테이너를 재시작 합니다.\n      ```yaml\n      livenessProbe:\n        tcpSocket:\n          port: 8080\n        initialDelaySeconds: 15\n        periodSeconds: 20\n      ```\n\n#### Readiness Probes\n  - Configuration을 로딩하거나, 많은 데이터를 로딩하거나, 외부 서비스를 호출하는 경우에는 일시적으로 서비스가 불가능한 상태가 될 수 있습니다.\n  - Readiness Probe를 사용하게 되면 주어진 조건이 만족할 경우, 서비스 라우팅하고, 응답이 없거나 실패한 경우, 서비스 목록에서 제외합니다.\n  ```yaml\n  readinessProbe:\n    exec:\n      command:\n      - cat\n      - /tmp/healthy\n    initialDelaySeconds: 5\n    periodSeconds: 5\n  ```\n\n</mark-down>\n        <g-image style=\"max-width: 70%\" \n            src=\"~/img/03_Bizdevops/06_운영/02/image30.png\"\n        ></g-image>\n    <mark-down class=\"content\"> \n\n#### Difference between Liveness and Readiness\n  - Liveness probe와 Readiness probe 차이점은 \n      - Liveness probe는 컨테이너의 상태가 비정상이라고 판단하면, \n          - 해당 Pod를 재시작하는데 반해, \n\n  - Readiness probe는 컨테이너가 비정상일 경우에는\n      - 해당 Pod를 사용할 수 없음으로 표시하고, 서비스등에서 제외합니다.\n  \n  - 주기적으로 체크하여, 정상일 경우 정상 서비스에 포함합니다.\n\n        </mark-down>\n    </div>\n</template>\n\n\n<script>\n        // @group 02_06_03_true\nexport default {\n    name: \"OperationTwo\",\n    props: {\n        \"Kubernetes 오브젝트 모델\": {\n            type: String\n        }\n    }\n};\n</script>","path":"/operation/operation/operation-two/","props":[{"name":"Kubernetes 오브젝트 모델"}],"componentDesc":{"group":["02_06_03_true"]},"fileInfo":{"name":"OperationTwo","path":"operation/operation/OperationTwo.vue","directory":"operation/operation"}},"allPagesByName":{"edges":[{"node":{"id":"455485b89fc07a2011135c71b3e5b06d","name":"index","path":"/operation/introduction/","props":[{"name":"소개"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/introduction/index.vue","directory":"operation/introduction"}}},{"node":{"id":"828ad64a8a90d85c8fc0a3729ebb68d6","name":"ExampleDomain","path":"/operation/introduction/example-domain/","props":[{"name":"예제 도메인"}],"componentDesc":{"group":["01_01_02"]},"fileInfo":{"name":"ExampleDomain","path":"operation/introduction/ExampleDomain.vue","directory":"operation/introduction"}}},{"node":{"id":"8456f3b47af9f3ea101b061bad3e4c60","name":"UsedPlatform","path":"/operation/introduction/used-platform/","props":[{"name":"사용 플랫폼"}],"componentDesc":{"group":["01_01_03"]},"fileInfo":{"name":"UsedPlatform","path":"operation/introduction/UsedPlatform.vue","directory":"operation/introduction"}}},{"node":{"id":"8d85c3f19a56dd66b4fdad8cb4b3d8e1","name":"ExampleApplication","path":"/operation/introduction/example-application/","props":[{"name":"예제 애플리케이션 둘러보기"}],"componentDesc":{"group":["01_01_04"]},"fileInfo":{"name":"ExampleApplication","path":"operation/introduction/ExampleApplication.vue","directory":"operation/introduction"}}},{"node":{"id":"bad07c884288d4e3c6374c6480fd9fe3","name":"RelatedResource","path":"/operation/introduction/related-resource/","props":[{"name":"관련 리소스"}],"componentDesc":{"group":["01_01_05"]},"fileInfo":{"name":"RelatedResource","path":"operation/introduction/RelatedResource.vue","directory":"operation/introduction"}}},{"node":{"id":"713cc4bd7c7d7dc7122a72f1e2559193","name":"UtilAndTool","path":"/operation/introduction/util-and-tool/","props":[{"name":"유틸리티 및 도구"}],"componentDesc":{"group":["01_01_06"]},"fileInfo":{"name":"UtilAndTool","path":"operation/introduction/UtilAndTool.vue","directory":"operation/introduction"}}},{"node":{"id":"eeaab9630dc4711635747aa9fda862d7","name":"index","path":"/operation/planning/","props":[{"name":"계획"}],"componentDesc":{"group":["01_02_01"]},"fileInfo":{"name":"index","path":"operation/planning/index.vue","directory":"operation/planning"}}},{"node":{"id":"43941ed8331160d458de8af0ed8c55a0","name":"StepByStepGoal","path":"/operation/planning/step-by-step-goal/","props":[{"name":"단계별 수행목표"}],"componentDesc":{"group":["01_02_02"]},"fileInfo":{"name":"StepByStepGoal","path":"operation/planning/StepByStepGoal.vue","directory":"operation/planning"}}},{"node":{"id":"96f28bd925c9a3f4291af7af90f3f8f1","name":"SegmentationLevel","path":"/operation/planning/segmentation-level/","props":[{"name":"세분화 수준"}],"componentDesc":{"group":["01_02_03"]},"fileInfo":{"name":"SegmentationLevel","path":"operation/planning/SegmentationLevel.vue","directory":"operation/planning"}}},{"node":{"id":"fea996d53387462e8d43e38f46f84ab1","name":"AvatarPatten","path":"/operation/planning/avatar-patten/","props":[{"name":"구현 패턴"}],"componentDesc":{"group":["01_02_04"]},"fileInfo":{"name":"AvatarPatten","path":"operation/planning/AvatarPatten.vue","directory":"operation/planning"}}},{"node":{"id":"58164a2c54b07d6052fda331fec0f758","name":"Planning","path":"/operation/planning/planning/","props":[{"name":"최종목표 수립"}],"componentDesc":{"group":["01_02_05"]},"fileInfo":{"name":"Planning","path":"operation/planning/Planning.vue","directory":"operation/planning"}}},{"node":{"id":"f7715041966f522014e526ecf22aad61","name":"SystemSecurity","path":"/operation/planning/system-security/","props":[{"name":"시스템 보안"}],"componentDesc":{"group":["01_02_06"]},"fileInfo":{"name":"SystemSecurity","path":"operation/planning/SystemSecurity.vue","directory":"operation/planning"}}},{"node":{"id":"abf384f6ffc7520780adece4dfe537ac","name":"PerformanceMeasures","path":"/operation/planning/performance-measures/","props":[{"name":"성능 확보 방안"}],"componentDesc":{"group":["01_02_07"]},"fileInfo":{"name":"PerformanceMeasures","path":"operation/planning/PerformanceMeasures.vue","directory":"operation/planning"}}},{"node":{"id":"b31eb669d439e2c8533478ddf58c3a3e","name":"CloudIq","path":"/operation/planning/cloud-iq/","props":[{"name":"클라우드 네이티브 전환 가이드"}],"componentDesc":{"group":["01_02_08"]},"fileInfo":{"name":"CloudIq","path":"operation/planning/CloudIq.vue","directory":"operation/planning"}}},{"node":{"id":"10730aa73947978d675e7c8daf2416e4","name":"TestMeasures","path":"/operation/planning/test-measures/","props":[{"name":"테스트 방안"}],"componentDesc":{"group":["01_02_09_true"]},"fileInfo":{"name":"TestMeasures","path":"operation/planning/TestMeasures.vue","directory":"operation/planning"}}},{"node":{"id":"21d97888270a338620632c524d256291","name":"index","path":"/operation/analysis/","props":[{"name":"분석"}],"componentDesc":{"group":["02_01_01"]},"fileInfo":{"name":"index","path":"operation/analysis/index.vue","directory":"operation/analysis"}}},{"node":{"id":"415e97d88f108384b5d54275fd20e0b0","name":"AnalysisOne","path":"/operation/analysis/analysis-one/","props":[{"name":"관심사 분리 필요성"}],"componentDesc":{"group":["02_01_02"]},"fileInfo":{"name":"AnalysisOne","path":"operation/analysis/AnalysisOne.vue","directory":"operation/analysis"}}},{"node":{"id":"39d48b66f14d620fe41a006bb7936fa0","name":"AnalysisTwo","path":"/operation/analysis/analysis-two/","props":[{"name":"애자일 필요성"}],"componentDesc":{"group":["02_01_03"]},"fileInfo":{"name":"AnalysisTwo","path":"operation/analysis/AnalysisTwo.vue","directory":"operation/analysis"}}},{"node":{"id":"8dff280938d055bec5f88b9567c42371","name":"AnalysisThree","path":"/operation/analysis/analysis-three/","props":[{"name":"레가시 모노리식의 한계점"}],"componentDesc":{"group":["02_01_04"]},"fileInfo":{"name":"AnalysisThree","path":"operation/analysis/AnalysisThree.vue","directory":"operation/analysis"}}},{"node":{"id":"f8c489692b996c65fa72641c291c45de","name":"index","path":"/operation/design/","props":[{"name":"설계"}],"componentDesc":{"group":["02_02_01"]},"fileInfo":{"name":"index","path":"operation/design/index.vue","directory":"operation/design"}}},{"node":{"id":"a2953ad4f2aaa393654dcc9f26a1edf6","name":"DesignOne","path":"/operation/design/design-one/","props":[{"name":"접근법과 분석패턴"}],"componentDesc":{"group":["02_02_02"]},"fileInfo":{"name":"DesignOne","path":"operation/design/DesignOne.vue","directory":"operation/design"}}},{"node":{"id":"715d7a6a67e1618c6f4a53bbe2ee693e","name":"DesignTwo","path":"/operation/design/design-two/","props":[{"name":"도메인 주도 설계"}],"componentDesc":{"group":["02_02_03"]},"fileInfo":{"name":"DesignTwo","path":"operation/design/DesignTwo.vue","directory":"operation/design"}}},{"node":{"id":"5d06067d6cb5f6d93bb81adfbdea1435","name":"DesignThree","path":"/operation/design/design-three/","props":[{"name":"이벤트스토밍"}],"componentDesc":{"group":["02_02_04"]},"fileInfo":{"name":"DesignThree","path":"operation/design/DesignThree.vue","directory":"operation/design"}}},{"node":{"id":"b4368bda16baebbfd2226f9c5adf0d42","name":"DesignFour","path":"/operation/design/design-four/","props":[{"name":"서비스 서열과 역학 관계"}],"componentDesc":{"group":["02_02_05"]},"fileInfo":{"name":"DesignFour","path":"operation/design/DesignFour.vue","directory":"operation/design"}}},{"node":{"id":"066b87fab26841fc32908a973c58bcbf","name":"DesignFive","path":"/operation/design/design-five/","props":[{"name":"아키텍처 설계"}],"componentDesc":{"group":["02_02_06"]},"fileInfo":{"name":"DesignFive","path":"operation/design/DesignFive.vue","directory":"operation/design"}}},{"node":{"id":"f1b1f93080994d9852bc52eca704267c","name":"DesignSix","path":"/operation/design/design-six/","props":[{"name":"서비스 디스커버리 패턴"}],"componentDesc":{"group":["02_02_07"]},"fileInfo":{"name":"DesignSix","path":"operation/design/DesignSix.vue","directory":"operation/design"}}},{"node":{"id":"9ae9ab1f6575feb602bf9a57b7818772","name":"DesignSeven","path":"/operation/design/design-seven/","props":[{"name":"마이크로서비스 보안설계"}],"componentDesc":{"group":["02_02_08_true"]},"fileInfo":{"name":"DesignSeven","path":"operation/design/DesignSeven.vue","directory":"operation/design"}}},{"node":{"id":"813f435401e4c85b9a53b0b0590c4675","name":"DesignEight","path":"/operation/design/design-eight/","props":[{"name":"프론트엔드 설계"}],"componentDesc":{"group":["02_02_09"]},"fileInfo":{"name":"DesignEight","path":"operation/design/DesignEight.vue","directory":"operation/design"}}},{"node":{"id":"e5f92b9f6556884b1a433342751f9c4b","name":"index","path":"/operation/implementation/","props":[{"name":"구현"}],"componentDesc":{"group":["02_03_01"]},"fileInfo":{"name":"index","path":"operation/implementation/index.vue","directory":"operation/implementation"}}},{"node":{"id":"a71dc4b521d90d7a5fd328ca6485cf2c","name":"ImplementationTwo","path":"/operation/implementation/implementation-two/","props":[{"name":"CNA 구현 프레임워크"}],"componentDesc":{"group":["02_03_03"]},"fileInfo":{"name":"ImplementationTwo","path":"operation/implementation/ImplementationTwo.vue","directory":"operation/implementation"}}},{"node":{"id":"118b27a63a6495e33fdda6ba920bb72f","name":"ImplementationThree","path":"/operation/implementation/implementation-three/","props":[{"name":"일반적인 CNA 구현"}],"componentDesc":{"group":["02_03_04"]},"fileInfo":{"name":"ImplementationThree","path":"operation/implementation/ImplementationThree.vue","directory":"operation/implementation"}}},{"node":{"id":"d4ce467fe9b110cf3d9204a7c87c2d31","name":"ImplementationFour","path":"/operation/implementation/implementation-four/","props":[{"name":"도구(MSAEz)기반 CNA구현 - 구글드라이브 예제"}],"componentDesc":{"group":["02_03_05_true"]},"fileInfo":{"name":"ImplementationFour","path":"operation/implementation/ImplementationFour.vue","directory":"operation/implementation"}}},{"node":{"id":"d848f0a1719ff09b14fae915a95f0f1b","name":"ImplementationFive","path":"/operation/implementation/implementation-five/","props":[{"name":"모노리스 to MSA전환"}],"componentDesc":{"group":["02_03_06_true"]},"fileInfo":{"name":"ImplementationFive","path":"operation/implementation/ImplementationFive.vue","directory":"operation/implementation"}}},{"node":{"id":"ad6bff45538535a3bd2887a82ebe29d3","name":"ImplementationSix","path":"/operation/implementation/implementation-six/","props":[{"name":"게이트웨이(Gateway)"}],"componentDesc":{"group":["02_03_07_true"]},"fileInfo":{"name":"ImplementationSix","path":"operation/implementation/ImplementationSix.vue","directory":"operation/implementation"}}},{"node":{"id":"f12c036cfa3fb9f28b0a1696e9afb5b0","name":"ImplementationSeven","path":"/operation/implementation/implementation-seven/","props":[{"name":"이벤트기반 메세지채널"}],"componentDesc":{"group":["02_03_08_true"]},"fileInfo":{"name":"ImplementationSeven","path":"operation/implementation/ImplementationSeven.vue","directory":"operation/implementation"}}},{"node":{"id":"0a87f2e4004042d6d0b4ba4458b19543","name":"index","path":"/operation/integration/","props":[{"name":"통합"}],"componentDesc":{"group":["02_04_01"]},"fileInfo":{"name":"index","path":"operation/integration/index.vue","directory":"operation/integration"}}},{"node":{"id":"4fc98863b3f01e7301e7eb51038eda20","name":"IntegrationOne","path":"/operation/integration/integration-one/","props":[{"name":"Front-End에서의 통합"}],"componentDesc":{"group":["02_04_02_true"]},"fileInfo":{"name":"IntegrationOne","path":"operation/integration/IntegrationOne.vue","directory":"operation/integration"}}},{"node":{"id":"6309cd44f104ea41564b644aaebb2563","name":"IntegrationTwo","path":"/operation/integration/integration-two/","props":[{"name":"동기호출에 의한 통합"}],"componentDesc":{"group":["02_04_03_true"]},"fileInfo":{"name":"IntegrationTwo","path":"operation/integration/IntegrationTwo.vue","directory":"operation/integration"}}},{"node":{"id":"391739994a94024e60b94f45131831cc","name":"IntegrationThree","path":"/operation/integration/integration-three/","props":[{"name":"Event-driven 기반 통합"}],"componentDesc":{"group":["02_04_04_true"]},"fileInfo":{"name":"IntegrationThree","path":"operation/integration/IntegrationThree.vue","directory":"operation/integration"}}},{"node":{"id":"cc5a7890ef0e7692a6a62142bd9665b4","name":"IntegrationFour","path":"/operation/integration/integration-four/","props":[{"name":"이벤추얼 트랜잭션"}],"componentDesc":{"group":["02_04_05_true"]},"fileInfo":{"name":"IntegrationFour","path":"operation/integration/IntegrationFour.vue","directory":"operation/integration"}}},{"node":{"id":"376b545a9bee05e0e0edb1394a838af7","name":"IntegrationFive","path":"/operation/integration/integration-five/","props":[{"name":"데이터 프로젝션"}],"componentDesc":{"group":["02_04_06_true"]},"fileInfo":{"name":"IntegrationFive","path":"operation/integration/IntegrationFive.vue","directory":"operation/integration"}}},{"node":{"id":"eae94a205296c8c586ca7e896180fe50","name":"IntegrationSix","path":"/operation/integration/integration-six/","props":[{"name":"CQRS"}],"componentDesc":{"group":["02_04_07_true"]},"fileInfo":{"name":"IntegrationSix","path":"operation/integration/IntegrationSix.vue","directory":"operation/integration"}}},{"node":{"id":"8351b072e264a8a0fe00edaefaff73d7","name":"index","path":"/operation/deployment/","props":[{"name":"배포"}],"componentDesc":{"group":["02_05_01"]},"fileInfo":{"name":"index","path":"operation/deployment/index.vue","directory":"operation/deployment"}}},{"node":{"id":"ceaa91041ecececd893ac50a0ac98232","name":"DeploymentOne","path":"/operation/deployment/deployment-one/","props":[{"name":"지속적인 통합"}],"componentDesc":{"group":["02_05_02"]},"fileInfo":{"name":"DeploymentOne","path":"operation/deployment/DeploymentOne.vue","directory":"operation/deployment"}}},{"node":{"id":"c08d003b92f6195a9c3d9220876cfcc6","name":"DeploymentTwo","path":"/operation/deployment/deployment-two/","props":[{"name":"파이프라인(Pipeline)"}],"componentDesc":{"group":["02_05_03"]},"fileInfo":{"name":"DeploymentTwo","path":"operation/deployment/DeploymentTwo.vue","directory":"operation/deployment"}}},{"node":{"id":"2f5d16b6a07e14c5cf5ccfba84168a58","name":"DeploymentThree","path":"/operation/deployment/deployment-three/","props":[{"name":"배포 전략"}],"componentDesc":{"group":["02_05_04"]},"fileInfo":{"name":"DeploymentThree","path":"operation/deployment/DeploymentThree.vue","directory":"operation/deployment"}}},{"node":{"id":"b00195f0569e3f550742aadd3c72b5c6","name":"DeploymentFour","path":"/operation/deployment/deployment-four/","props":[{"name":"실습 스크립트"}],"componentDesc":{"group":["02_05_05"]},"fileInfo":{"name":"DeploymentFour","path":"operation/deployment/DeploymentFour.vue","directory":"operation/deployment"}}},{"node":{"id":"70dcb5649cee1dc9e6f986fa06a30e37","name":"index","path":"/operation/operation/","props":[{"name":"운영"}],"componentDesc":{"group":["02_06_01"]},"fileInfo":{"name":"index","path":"operation/operation/index.vue","directory":"operation/operation"}}},{"node":{"id":"a6367070dbcf4005b9749f36b12ce957","name":"OperationOne","path":"/operation/operation/operation-one/","props":[{"name":"도커 이미지"}],"componentDesc":{"group":["02_06_02_true"]},"fileInfo":{"name":"OperationOne","path":"operation/operation/OperationOne.vue","directory":"operation/operation"}}},{"node":{"id":"5c605f462cb5af809e8c01591411c8a8","name":"OperationTwo","path":"/operation/operation/operation-two/","props":[{"name":"Kubernetes 오브젝트 모델"}],"componentDesc":{"group":["02_06_03_true"]},"fileInfo":{"name":"OperationTwo","path":"operation/operation/OperationTwo.vue","directory":"operation/operation"}}},{"node":{"id":"571dfcc524308562cfbe688635a934b1","name":"OperationThree","path":"/operation/operation/operation-three/","props":[{"name":"Kubernetes Advanced 객체"}],"componentDesc":{"group":["02_06_04_true"]},"fileInfo":{"name":"OperationThree","path":"operation/operation/OperationThree.vue","directory":"operation/operation"}}},{"node":{"id":"df7d03483f8157c6354a82c325a43539","name":"OperationFour","path":"/operation/operation/operation-four/","props":[{"name":"Kubernetes 아키텍처"}],"componentDesc":{"group":["02_06_05"]},"fileInfo":{"name":"OperationFour","path":"operation/operation/OperationFour.vue","directory":"operation/operation"}}},{"node":{"id":"05165bc39ff0940d8503c5e13cdf8279","name":"OperationFive","path":"/operation/operation/operation-five/","props":[{"name":"서비스메시 이스티오"}],"componentDesc":{"group":["02_06_06_true"]},"fileInfo":{"name":"OperationFive","path":"operation/operation/OperationFive.vue","directory":"operation/operation"}}},{"node":{"id":"3e40606f453cbda5f32f9f6f7d998c7e","name":"OperationSix","path":"/operation/operation/operation-six/","props":[{"name":"마이크로서비스 모니터링"}],"componentDesc":{"group":["02_06_07"]},"fileInfo":{"name":"OperationSix","path":"operation/operation/OperationSix.vue","directory":"operation/operation"}}},{"node":{"id":"fab130dfedfaab931b1fa670a960c27f","name":"OperationSeven","path":"/operation/operation/operation-seven/","props":[{"name":"실습 스크립트"}],"componentDesc":{"group":["02_06_08"]},"fileInfo":{"name":"OperationSeven","path":"operation/operation/OperationSeven.vue","directory":"operation/operation"}}},{"node":{"id":"51f592383435f336f2506fe3b82f1405","name":"index","path":"/operation/checkpoint/","props":[{"name":"트러블 슈팅"}],"componentDesc":{"group":["03_01_01"]},"fileInfo":{"name":"index","path":"operation/checkpoint/index.vue","directory":"operation/checkpoint"}}},{"node":{"id":"430e7ad4ea8e19235020c1fb58d2313c","name":"CheckPointOne","path":"/operation/checkpoint/check-point-one/","props":[{"name":"Pod 상태코드"}],"componentDesc":{"group":["03_01_02"]},"fileInfo":{"name":"CheckPointOne","path":"operation/checkpoint/CheckPointOne.vue","directory":"operation/checkpoint"}}},{"node":{"id":"63a843f0884ef8cc958a461de84c1a2e","name":"CheckPointTwo","path":"/operation/checkpoint/check-point-two/","props":[{"name":"Helm related"}],"componentDesc":{"group":["03_01_03"]},"fileInfo":{"name":"CheckPointTwo","path":"operation/checkpoint/CheckPointTwo.vue","directory":"operation/checkpoint"}}},{"node":{"id":"1fd099929393e781c266bc8994c71520","name":"index","path":"/operation/strategy/","props":[{"name":"MSA 전환전략"}],"componentDesc":{"group":["03_03_01"]},"fileInfo":{"name":"index","path":"operation/strategy/index.vue","directory":"operation/strategy"}}},{"node":{"id":"434f50ea02cbdbd2ae7abc51bee9b7c9","name":"index","path":"/operation/tool/","props":[{"name":"MSA 도구"}],"componentDesc":{"group":["03_03_01"]},"fileInfo":{"name":"index","path":"operation/tool/index.vue","directory":"operation/tool"}}},{"node":{"id":"847a9951a2b7a3ee7731f019fe5423d0","name":"StrategyOne","path":"/operation/strategy/strategy-one/","props":[{"name":"전환대상 식별"}],"componentDesc":{"group":["03_03_02"]},"fileInfo":{"name":"StrategyOne","path":"operation/strategy/StrategyOne.vue","directory":"operation/strategy"}}},{"node":{"id":"2e0dbc98f33cf40c7a0d4ea6697de88d","name":"ToolOne","path":"/operation/tool/tool-one/","props":[{"name":"이벤트스토밍 도구"}],"componentDesc":{"group":["03_03_02"]},"fileInfo":{"name":"ToolOne","path":"operation/tool/ToolOne.vue","directory":"operation/tool"}}},{"node":{"id":"115c7f167bcf04682abeb72ec7282e2e","name":"StrategyTwo","path":"/operation/strategy/strategy-two/","props":[{"name":"전환방식 선정"}],"componentDesc":{"group":["03_03_03"]},"fileInfo":{"name":"StrategyTwo","path":"operation/strategy/StrategyTwo.vue","directory":"operation/strategy"}}},{"node":{"id":"fe0823656a5c935020ee28b3b65c7696","name":"ToolTwo","path":"/operation/tool/tool-two/","props":[{"name":"폴리글랏 템플릿 설계"}],"componentDesc":{"group":["03_03_03"]},"fileInfo":{"name":"ToolTwo","path":"operation/tool/ToolTwo.vue","directory":"operation/tool"}}},{"node":{"id":"5356b3b016ca28c7fe3d5d1069077806","name":"StrategyThree","path":"/operation/strategy/strategy-three/","props":[{"name":"전환이슈 및 솔루션"}],"componentDesc":{"group":["03_03_04"]},"fileInfo":{"name":"StrategyThree","path":"operation/strategy/StrategyThree.vue","directory":"operation/strategy"}}},{"node":{"id":"906edca02a2c2e37d9566ec0918770a7","name":"ToolThree","path":"/operation/tool/tool-three/","props":[{"name":"배포 다이어그래밍 도구"}],"componentDesc":{"group":["03_03_04"]},"fileInfo":{"name":"ToolThree","path":"operation/tool/ToolThree.vue","directory":"operation/tool"}}},{"node":{"id":"906e7d4891ca3ee147d67c15cd15f0a5","name":"ArchitectureOne","path":"/operation/architecture/architecture-one/","props":[{"name":"API Gateway"}],"componentDesc":{"group":["03_04_01"]},"fileInfo":{"name":"ArchitectureOne","path":"operation/architecture/ArchitectureOne.vue","directory":"operation/architecture"}}},{"node":{"id":"b183fd861b323503a21a80ef7c01091e","name":"index","path":"/operation/architecture/","props":[{"name":"MSA Outer 아키텍처"}],"componentDesc":{"group":["03_04_01"]},"fileInfo":{"name":"index","path":"operation/architecture/index.vue","directory":"operation/architecture"}}},{"node":{"id":"031e653a03b40e6918c87598eebd340f","name":"ArchitectureTwo","path":"/operation/architecture/architecture-two/","props":[{"name":"Service Mesh"}],"componentDesc":{"group":["03_04_03"]},"fileInfo":{"name":"ArchitectureTwo","path":"operation/architecture/ArchitectureTwo.vue","directory":"operation/architecture"}}},{"node":{"id":"87f88aa6bec4824bb88f99284f3edcd1","name":"ArchitectureThree","path":"/operation/architecture/architecture-three/","props":[{"name":"Container Management"}],"componentDesc":{"group":["03_04_04"]},"fileInfo":{"name":"ArchitectureThree","path":"operation/architecture/ArchitectureThree.vue","directory":"operation/architecture"}}},{"node":{"id":"139588c1bc0cabeacbeff3b0a4e813a7","name":"ArchitectureFour","path":"/operation/architecture/architecture-four/","props":[{"name":"Backing Service"}],"componentDesc":{"group":["03_04_05"]},"fileInfo":{"name":"ArchitectureFour","path":"operation/architecture/ArchitectureFour.vue","directory":"operation/architecture"}}},{"node":{"id":"a3220fe8675b5f4015b7e9344842edfc","name":"ArchitectureFive","path":"/operation/architecture/architecture-five/","props":[{"name":"Telemetry"}],"componentDesc":{"group":["03_04_06"]},"fileInfo":{"name":"ArchitectureFive","path":"operation/architecture/ArchitectureFive.vue","directory":"operation/architecture"}}},{"node":{"id":"f7e058e64156720eeda77ac24833b8a0","name":"index","path":"/operation/education/","props":[{"name":"교육과정 소개"}],"componentDesc":{"group":["07_02_01"]},"fileInfo":{"name":"index","path":"operation/education/index.vue","directory":"operation/education"}}},{"node":{"id":"6c94538cf12d7f48724f59017a3947e1","name":"CourseInfo","path":"/operation/education/schedule/","props":[{"name":"교육과정"}],"componentDesc":{"group":["07_02_02"]},"fileInfo":{"name":"schedule","path":"operation/education/schedule.vue","directory":"operation/education"}}},{"node":{"id":"47f5c42fb2aab3cb9c3fc5c19b2b28ef","name":"ai-curriculum","path":"/operation/education/ai-curriculum/","props":[{"name":"1. AI Coding"}],"componentDesc":{"group":["07_02_03"]},"fileInfo":{"name":"AI-Curriculum","path":"operation/education/AI-Curriculum.vue","directory":"operation/education"}}},{"node":{"id":"c44ce9847840ec513933a75b36ebc879","name":"fundamental","path":"/operation/education/fundamental/","props":[{"name":"2. Fundamental Course"}],"componentDesc":{"group":["07_02_04"]},"fileInfo":{"name":"Fundamental","path":"operation/education/Fundamental.vue","directory":"operation/education"}}},{"node":{"id":"ee42f06bf85d9d4bf7dc8e2584e6f044","name":"curriculum","path":"/operation/education/curriculum/","props":[{"name":"3. Intermediate Course"}],"componentDesc":{"group":["07_02_05"]},"fileInfo":{"name":"Curriculum","path":"operation/education/Curriculum.vue","directory":"operation/education"}}},{"node":{"id":"e04d48b79a76cf33eaa196955484a27e","name":"quick-understanding-cna","path":"/operation/education/quick-understanding-cna/","props":[{"name":"3-1. Quick Understanding(4시간)"}],"componentDesc":{"group":["07_02_06"]},"fileInfo":{"name":"QuickUnderstandingCNA","path":"operation/education/QuickUnderstandingCNA.vue","directory":"operation/education"}}},{"node":{"id":"5777be4c0ec1286cb8c720c4288ae89e","name":"flipped-learning4-days-cna-course","path":"/operation/education/flipped-learning4-days-cna-course/","props":[{"name":"3-2. Flipped Learning(4일 or 2일)"}],"componentDesc":{"group":["07_02_08"]},"fileInfo":{"name":"FlippedLearning4DaysCNACourse","path":"operation/education/FlippedLearning4DaysCNACourse.vue","directory":"operation/education"}}},{"node":{"id":"aa96040785ee2d9c5d5bf8ed34702525","name":"standard-cna","path":"/operation/education/standard-cna/","props":[{"name":"3-3. Standard(4일 or 2일)"}],"componentDesc":{"group":["07_02_09"]},"fileInfo":{"name":"StandardCNA","path":"operation/education/StandardCNA.vue","directory":"operation/education"}}},{"node":{"id":"33937fcb417dd8cf10dec7858aa288d4","name":"enterprise-full-day14-days-course","path":"/operation/education/enterprise-full-day14-days-course/","props":[{"name":"3-4. Enterprise Full-day(14일)"}],"componentDesc":{"group":["07_02_10"]},"fileInfo":{"name":"EnterpriseFull-day14DaysCourse","path":"operation/education/EnterpriseFull-day14DaysCourse.vue","directory":"operation/education"}}},{"node":{"id":"25b4c6501edd38d0118b45f5904de572","name":"advanced","path":"/operation/education/advanced/","props":[{"name":"4. Advanced Course"}],"componentDesc":{"group":["07_02_11"]},"fileInfo":{"name":"Advanced","path":"operation/education/Advanced.vue","directory":"operation/education"}}},{"node":{"id":"d91985f05b0e6945f0a032ee50231fde","name":"one-point-lesson","path":"/operation/education/one-point-lesson/","props":[{"name":"5. MSA Consulting(협의)"}],"componentDesc":{"group":["07_02_12"]},"fileInfo":{"name":"OnePointLesson","path":"operation/education/OnePointLesson.vue","directory":"operation/education"}}}]},"allPages":{"edges":[{"node":{"name":"ToolOne","path":"/operation/tool/tool-one/","fileInfo":{"name":"ToolOne","directory":"operation/tool"}}},{"node":{"name":"OperationTwo","path":"/operation/operation/operation-two/","fileInfo":{"name":"OperationTwo","directory":"operation/operation"}}},{"node":{"name":"index","path":"/operation/operation/","fileInfo":{"name":"index","directory":"operation/operation"}}},{"node":{"name":"OperationSeven","path":"/operation/operation/operation-seven/","fileInfo":{"name":"OperationSeven","directory":"operation/operation"}}},{"node":{"name":"OperationSix","path":"/operation/operation/operation-six/","fileInfo":{"name":"OperationSix","directory":"operation/operation"}}},{"node":{"name":"OperationThree","path":"/operation/operation/operation-three/","fileInfo":{"name":"OperationThree","directory":"operation/operation"}}},{"node":{"name":"OperationFive","path":"/operation/operation/operation-five/","fileInfo":{"name":"OperationFive","directory":"operation/operation"}}},{"node":{"name":"ToolThree","path":"/operation/tool/tool-three/","fileInfo":{"name":"ToolThree","directory":"operation/tool"}}},{"node":{"name":"OperationFour","path":"/operation/operation/operation-four/","fileInfo":{"name":"OperationFour","directory":"operation/operation"}}},{"node":{"name":"OperationOne","path":"/operation/operation/operation-one/","fileInfo":{"name":"OperationOne","directory":"operation/operation"}}},{"node":{"name":"index","path":"/operation/tool/","fileInfo":{"name":"index","directory":"operation/tool"}}},{"node":{"name":"StrategyThree","path":"/operation/strategy/strategy-three/","fileInfo":{"name":"StrategyThree","directory":"operation/strategy"}}},{"node":{"name":"ToolTwo","path":"/operation/tool/tool-two/","fileInfo":{"name":"ToolTwo","directory":"operation/tool"}}},{"node":{"name":"index","path":"/operation/strategy/","fileInfo":{"name":"index","directory":"operation/strategy"}}},{"node":{"name":"StrategyTwo","path":"/operation/strategy/strategy-two/","fileInfo":{"name":"StrategyTwo","directory":"operation/strategy"}}},{"node":{"name":"index","path":"/operation/deployment/","fileInfo":{"name":"index","directory":"operation/deployment"}}},{"node":{"name":"StrategyOne","path":"/operation/strategy/strategy-one/","fileInfo":{"name":"StrategyOne","directory":"operation/strategy"}}},{"node":{"name":"DeploymentTwo","path":"/operation/deployment/deployment-two/","fileInfo":{"name":"DeploymentTwo","directory":"operation/deployment"}}},{"node":{"name":"DeploymentThree","path":"/operation/deployment/deployment-three/","fileInfo":{"name":"DeploymentThree","directory":"operation/deployment"}}},{"node":{"name":"DeploymentOne","path":"/operation/deployment/deployment-one/","fileInfo":{"name":"DeploymentOne","directory":"operation/deployment"}}},{"node":{"name":"DeploymentFour","path":"/operation/deployment/deployment-four/","fileInfo":{"name":"DeploymentFour","directory":"operation/deployment"}}},{"node":{"name":"TestMeasures","path":"/operation/planning/test-measures/","fileInfo":{"name":"TestMeasures","directory":"operation/planning"}}},{"node":{"name":"index","path":"/operation/planning/","fileInfo":{"name":"index","directory":"operation/planning"}}},{"node":{"name":"ExampleApplication","path":"/operation/introduction/example-application/","fileInfo":{"name":"ExampleApplication","directory":"operation/introduction"}}},{"node":{"name":"SystemSecurity","path":"/operation/planning/system-security/","fileInfo":{"name":"SystemSecurity","directory":"operation/planning"}}},{"node":{"name":"AvatarPatten","path":"/operation/planning/avatar-patten/","fileInfo":{"name":"AvatarPatten","directory":"operation/planning"}}},{"node":{"name":"StepByStepGoal","path":"/operation/planning/step-by-step-goal/","fileInfo":{"name":"StepByStepGoal","directory":"operation/planning"}}},{"node":{"name":"SegmentationLevel","path":"/operation/planning/segmentation-level/","fileInfo":{"name":"SegmentationLevel","directory":"operation/planning"}}},{"node":{"name":"PerformanceMeasures","path":"/operation/planning/performance-measures/","fileInfo":{"name":"PerformanceMeasures","directory":"operation/planning"}}},{"node":{"name":"Planning","path":"/operation/planning/planning/","fileInfo":{"name":"Planning","directory":"operation/planning"}}},{"node":{"name":"ImplementationTwo","path":"/operation/implementation/implementation-two/","fileInfo":{"name":"ImplementationTwo","directory":"operation/implementation"}}},{"node":{"name":"index","path":"/operation/introduction/","fileInfo":{"name":"index","directory":"operation/introduction"}}},{"node":{"name":"IntegrationTwo","path":"/operation/integration/integration-two/","fileInfo":{"name":"IntegrationTwo","directory":"operation/integration"}}},{"node":{"name":"CloudIq","path":"/operation/planning/cloud-iq/","fileInfo":{"name":"CloudIq","directory":"operation/planning"}}},{"node":{"name":"UsedPlatform","path":"/operation/introduction/used-platform/","fileInfo":{"name":"UsedPlatform","directory":"operation/introduction"}}},{"node":{"name":"RelatedResource","path":"/operation/introduction/related-resource/","fileInfo":{"name":"RelatedResource","directory":"operation/introduction"}}},{"node":{"name":"ExampleDomain","path":"/operation/introduction/example-domain/","fileInfo":{"name":"ExampleDomain","directory":"operation/introduction"}}},{"node":{"name":"UtilAndTool","path":"/operation/introduction/util-and-tool/","fileInfo":{"name":"UtilAndTool","directory":"operation/introduction"}}},{"node":{"name":"IntegrationFive","path":"/operation/integration/integration-five/","fileInfo":{"name":"IntegrationFive","directory":"operation/integration"}}},{"node":{"name":"index","path":"/operation/integration/","fileInfo":{"name":"index","directory":"operation/integration"}}},{"node":{"name":"IntegrationThree","path":"/operation/integration/integration-three/","fileInfo":{"name":"IntegrationThree","directory":"operation/integration"}}},{"node":{"name":"IntegrationOne","path":"/operation/integration/integration-one/","fileInfo":{"name":"IntegrationOne","directory":"operation/integration"}}},{"node":{"name":"quick-understanding-cna","path":"/operation/education/quick-understanding-cna/","fileInfo":{"name":"QuickUnderstandingCNA","directory":"operation/education"}}},{"node":{"name":"IntegrationSix","path":"/operation/integration/integration-six/","fileInfo":{"name":"IntegrationSix","directory":"operation/integration"}}},{"node":{"name":"IntegrationFour","path":"/operation/integration/integration-four/","fileInfo":{"name":"IntegrationFour","directory":"operation/integration"}}},{"node":{"name":"ImplementationFour","path":"/operation/implementation/implementation-four/","fileInfo":{"name":"ImplementationFour","directory":"operation/implementation"}}},{"node":{"name":"ImplementationSix","path":"/operation/implementation/implementation-six/","fileInfo":{"name":"ImplementationSix","directory":"operation/implementation"}}},{"node":{"name":"ImplementationFive","path":"/operation/implementation/implementation-five/","fileInfo":{"name":"ImplementationFive","directory":"operation/implementation"}}},{"node":{"name":"index","path":"/operation/implementation/","fileInfo":{"name":"index","directory":"operation/implementation"}}},{"node":{"name":"one-point-lesson","path":"/operation/education/one-point-lesson/","fileInfo":{"name":"OnePointLesson","directory":"operation/education"}}},{"node":{"name":"ImplementationThree","path":"/operation/implementation/implementation-three/","fileInfo":{"name":"ImplementationThree","directory":"operation/implementation"}}},{"node":{"name":"CourseInfo","path":"/operation/education/schedule/","fileInfo":{"name":"schedule","directory":"operation/education"}}},{"node":{"name":"ImplementationSeven","path":"/operation/implementation/implementation-seven/","fileInfo":{"name":"ImplementationSeven","directory":"operation/implementation"}}},{"node":{"name":"flipped-learning4-days-cna-course","path":"/operation/education/flipped-learning4-days-cna-course/","fileInfo":{"name":"FlippedLearning4DaysCNACourse","directory":"operation/education"}}},{"node":{"name":"fundamental","path":"/operation/education/fundamental/","fileInfo":{"name":"Fundamental","directory":"operation/education"}}},{"node":{"name":"index","path":"/operation/education/","fileInfo":{"name":"index","directory":"operation/education"}}},{"node":{"name":"advanced","path":"/operation/education/advanced/","fileInfo":{"name":"Advanced","directory":"operation/education"}}},{"node":{"name":"standard-cna","path":"/operation/education/standard-cna/","fileInfo":{"name":"StandardCNA","directory":"operation/education"}}},{"node":{"name":"enterprise-full-day14-days-course","path":"/operation/education/enterprise-full-day14-days-course/","fileInfo":{"name":"EnterpriseFull-day14DaysCourse","directory":"operation/education"}}},{"node":{"name":"curriculum","path":"/operation/education/curriculum/","fileInfo":{"name":"Curriculum","directory":"operation/education"}}},{"node":{"name":"ai-curriculum","path":"/operation/education/ai-curriculum/","fileInfo":{"name":"AI-Curriculum","directory":"operation/education"}}},{"node":{"name":"DesignFive","path":"/operation/design/design-five/","fileInfo":{"name":"DesignFive","directory":"operation/design"}}},{"node":{"name":"AnalysisTwo","path":"/operation/analysis/analysis-two/","fileInfo":{"name":"AnalysisTwo","directory":"operation/analysis"}}},{"node":{"name":"index","path":"/operation/design/","fileInfo":{"name":"index","directory":"operation/design"}}},{"node":{"name":"DesignTwo","path":"/operation/design/design-two/","fileInfo":{"name":"DesignTwo","directory":"operation/design"}}},{"node":{"name":"DesignThree","path":"/operation/design/design-three/","fileInfo":{"name":"DesignThree","directory":"operation/design"}}},{"node":{"name":"DesignSeven","path":"/operation/design/design-seven/","fileInfo":{"name":"DesignSeven","directory":"operation/design"}}},{"node":{"name":"index","path":"/operation/analysis/","fileInfo":{"name":"index","directory":"operation/analysis"}}},{"node":{"name":"DesignSix","path":"/operation/design/design-six/","fileInfo":{"name":"DesignSix","directory":"operation/design"}}},{"node":{"name":"DesignOne","path":"/operation/design/design-one/","fileInfo":{"name":"DesignOne","directory":"operation/design"}}},{"node":{"name":"DesignEight","path":"/operation/design/design-eight/","fileInfo":{"name":"DesignEight","directory":"operation/design"}}},{"node":{"name":"DesignFour","path":"/operation/design/design-four/","fileInfo":{"name":"DesignFour","directory":"operation/design"}}},{"node":{"name":"index","path":"/operation/checkpoint/","fileInfo":{"name":"index","directory":"operation/checkpoint"}}},{"node":{"name":"CheckPointTwo","path":"/operation/checkpoint/check-point-two/","fileInfo":{"name":"CheckPointTwo","directory":"operation/checkpoint"}}},{"node":{"name":"ArchitectureThree","path":"/operation/architecture/architecture-three/","fileInfo":{"name":"ArchitectureThree","directory":"operation/architecture"}}},{"node":{"name":"CheckPointOne","path":"/operation/checkpoint/check-point-one/","fileInfo":{"name":"CheckPointOne","directory":"operation/checkpoint"}}},{"node":{"name":"index","path":"/operation/architecture/","fileInfo":{"name":"index","directory":"operation/architecture"}}},{"node":{"name":"ArchitectureTwo","path":"/operation/architecture/architecture-two/","fileInfo":{"name":"ArchitectureTwo","directory":"operation/architecture"}}},{"node":{"name":"ArchitectureOne","path":"/operation/architecture/architecture-one/","fileInfo":{"name":"ArchitectureOne","directory":"operation/architecture"}}},{"node":{"name":"AnalysisThree","path":"/operation/analysis/analysis-three/","fileInfo":{"name":"AnalysisThree","directory":"operation/analysis"}}},{"node":{"name":"ArchitectureFour","path":"/operation/architecture/architecture-four/","fileInfo":{"name":"ArchitectureFour","directory":"operation/architecture"}}},{"node":{"name":"AnalysisOne","path":"/operation/analysis/analysis-one/","fileInfo":{"name":"AnalysisOne","directory":"operation/analysis"}}},{"node":{"name":"ArchitectureFive","path":"/operation/architecture/architecture-five/","fileInfo":{"name":"ArchitectureFive","directory":"operation/architecture"}}}]}},"context":{"pathRegexp":"^$path.+$"}}